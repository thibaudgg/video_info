---
http_interactions:
- request:
    method: head
    uri: https://vimeo.com/136971428
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - VideoInfo/3.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Mar 2023 00:33:33 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Connection:
      - keep-alive
      Expires:
      - Wed, 08 Mar 2023 00:40:46 GMT
      X-Vimeo-Device:
      - d
      X-Ua-Compatible:
      - IE=edge
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - sameorigin
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy-Report-Only:
      - 'default-src https: data: blob: wss: ''unsafe-inline'' ''unsafe-eval''; report-uri
        /_csp'
      X-Bapp-Server:
      - pweb-765c769cf8-bfqzj
      Via:
      - 1.1 varnish, 1.1 varnish, 1.1 varnish
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      X-Varnish-Cache:
      - '1'
      X-Vserver:
      - webproxy-rollout-prod-varnish-3
      X-Backend-Proxy:
      - webproxy4
      Age:
      - '0'
      X-Served-By:
      - cache-iad-kjyo7100044-IAD, cache-mad22088-MAD
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1678235613.415284,VS0,VE130
      Vary:
      - User-Agent,Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=.emLgHagULuhFdXZn9NT6GprWw.R1fpPcHW1DtKqjic-1678235613-0-AQztxXd7pDsci+PurwDRn96QOQYm0ORks4POWNu2x96Rk+KMVryjcKrdGJBdjaSvPGHu4LkWAwGYsdb2rZmZ2QI=;
        path=/; expires=Wed, 08-Mar-23 01:03:33 GMT; domain=.vimeo.com; HttpOnly;
        Secure; SameSite=None
      Server:
      - cloudflare
      Cf-Ray:
      - 7a46fcc7c8bd28de-BCN
      Content-Encoding:
      - gzip
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Wed, 08 Mar 2023 00:33:33 GMT
- request:
    method: get
    uri: https://vimeo.com/136971428
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Mar 2023 00:33:33 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Expires:
      - Wed, 08 Mar 2023 00:40:46 GMT
      X-Vimeo-Device:
      - d
      X-Ua-Compatible:
      - IE=edge
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - sameorigin
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy-Report-Only:
      - 'default-src https: data: blob: wss: ''unsafe-inline'' ''unsafe-eval''; report-uri
        /_csp'
      X-Bapp-Server:
      - pweb-765c769cf8-tssr4
      Via:
      - 1.1 varnish, 1.1 varnish, 1.1 varnish
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      X-Varnish-Cache:
      - '1'
      X-Vserver:
      - webproxy-rollout-prod-varnish-3
      X-Backend-Proxy:
      - webproxy4
      Age:
      - '0'
      X-Served-By:
      - cache-iad-kjyo7100044-IAD, cache-mad22080-MAD
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1678235614.646777,VS0,VE149
      Vary:
      - User-Agent,Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=Km3pk_SgrqaqvEb.eF5yRFBRam_vc1Q.SZAg1aCKEcM-1678235613-0-AdrloY1enbjyKNU34Abyvyhz9/2NqHg0acVfK/2G9ySJF8r090tSrEQySTWfwJ353Hao3/m7gDLkYeAa8ardGfI=;
        path=/; expires=Wed, 08-Mar-23 01:03:33 GMT; domain=.vimeo.com; HttpOnly;
        Secure; SameSite=None
      Server:
      - cloudflare
      Cf-Ray:
      - 7a46fcc93c3e1946-BCN
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 Mar 2023 00:33:33 GMT
- request:
    method: head
    uri: https://vimeo.com/136971428
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - VideoInfo/3.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Mar 2023 00:33:34 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Connection:
      - keep-alive
      Expires:
      - Wed, 08 Mar 2023 00:40:46 GMT
      X-Vimeo-Device:
      - d
      X-Ua-Compatible:
      - IE=edge
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - sameorigin
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy-Report-Only:
      - 'default-src https: data: blob: wss: ''unsafe-inline'' ''unsafe-eval''; report-uri
        /_csp'
      X-Bapp-Server:
      - pweb-765c769cf8-bfqzj
      Via:
      - 1.1 varnish, 1.1 varnish, 1.1 varnish
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      X-Varnish-Cache:
      - '1'
      X-Vserver:
      - webproxy-rollout-prod-varnish-3
      X-Backend-Proxy:
      - webproxy4
      Age:
      - '0'
      X-Served-By:
      - cache-iad-kjyo7100044-IAD, cache-mad22021-MAD
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1678235614.938274,VS0,VE252
      Vary:
      - User-Agent,Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=l259HsD5MT0CeEyMonu95467NUPsMncc6nQnZ7gRdUU-1678235614-0-ARylpI3h7rJXOlFtsrlMu7k4Z7np9yV9wwLqRQdy+ndPOh1IYjgA8wbBwwqbKhrFI0kVf5m4FwHOPGH8QvH/lV8=;
        path=/; expires=Wed, 08-Mar-23 01:03:34 GMT; domain=.vimeo.com; HttpOnly;
        Secure; SameSite=None
      Server:
      - cloudflare
      Cf-Ray:
      - 7a46fccb0bc511b7-BCN
      Content-Encoding:
      - gzip
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Wed, 08 Mar 2023 00:33:34 GMT
recorded_with: VCR 6.1.0
